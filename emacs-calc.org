#+TITLE: Docs / GNU Emacs Calculator

Stack-based calculator in reversed polish notation (RPN).

Resources:
- [[info:Calc#Top][The GNU Emacs Calculator *info*]] (Introduction, Tutorial, Reference)

* Startup & IO
Invoke GNU Emacs Calculator functions:
: C-x * … : calc-dispatch

Toggle Calc modes:
- ~… c : calc~ → toggle Calc
- ~… q : quick-calc~ → use /Quick mode/ for quick /minibuffer/ calculations
- ~… k : calc-keypad~ → use /Keypad mode/ for a /mouse-based/ interface
- ~… e : calc-embedded~ → toggle /Embedded mode/ for /in-buffer/ calculations
- ~… w : calc-embedded-word~ → toggle /Embedded mode/ for a single “word”
- ~… j : calc-embedded-select~ → (?) toggle /Embedded mode/ for a selected part

Input to/from Calc:
- ~… y : calc-copy-to-buffer~ → /yank/ from Calc into current editing buffer
- ~… g : calc-grab-region~ → /grab/ numbers from /region/ into a /vector/
  - with ~C-u~ prefix, interprets the region as a single /formula/ instead
- ~… r : calc-grab-rectangle~ → /grab/ numbers from /rectangle/ into a /matrix/
- ~… : : calc-grab-sum-down~ → /grab/ /rectangle/ & compute its /column sums/
- ~… _ : calc-grab-sum-across~ → /grab/ /rectangle/ & compute its /row sums/

Calc setup:
- ~… x : calc-quit~ → exit Calc
- ~… 0 : calc-reset~ → reset Calc to its /initial state/: empty stack, initial
  mode settings
- ~… b : full-calc~ → toggles expansion of Calc to /full screen/ height
- ~… o : calc-other-window~ → like ~c~, but doesn’t select the Calc window
  - if Calc is already open and point is in another window, closes Calc
  - if the point is in Calc window, switches out to another window
  - use in combination with ~c~ to switch in and out of Calc quickly

… (many more, see [[info:Calc#Other C-x * Commands][Calc#Other C-x * Commands]])

* Calculation Modes

*Quick mode* prompts for a formula in /standard notation/. The result will be
shown in the /minibuffer/ and also appear in the /kill ring/ to be yanked into
the editing buffer.
- ~$~ in the formula can use the previous result as input

*Keypad mode* is designed like a real calculator layout and intended to be
used with the mouse.

*Embedded mode* is a way to use Calc directly inside an editing buffer. Emacs
reads and (invisibly) pushes the formula onto the Calc stack. It can be
manipulated using the usual Calc keys, which replaces the old formula by the
result copied from the stack.
- ~calc-embedded~ can be invoked with the point /on a formula separated by a
  blank line above and below/.
- ~calc-embedded-word~ can be invoked with the point /on a single number/ (or
  “word”) inside text.
- type ~C-x * e/w~ again to exit embedded mode
- if mode settings are changed, Calc adds them as TeX comments above
  - *Note:* earlier annotations will also affect editing of formulas later in
    the buffer, so they either need to be removed or overwritten by later
    ones

* General Commands
- ~q : calc-quit~ → exit calculator
- ~U : calc-undo~ → undo input
- ~y : calc-copy-to-buffer~ → copy top of stack into editing buffer
- ~' : calc-algebraic-entry~ → enter an algebraic formula
- ~= : calc-evaluate~ → evaluate algebraic formula

Saving mode settings across sessions:
- ~m m : calc-save-modes~ → save all current mode settings
  - the save-file is defined in the ~calc-settings-file~ variable
  - the default save-file is =~/.emacs.d/calc.el=
  - includes everything controlled by the ~m~ and ~d~ prefix keys, the current
    precision and binary word size, whether or not the trail is displayed,
    the current height of the Calc window, etc.
- ~m R : calc-mode-record-mode~ → like ~m m~ every time a mode setting changes
  - this “automatic mode recording” mode is also saved
  - ~m R~ again disables it (must be saved with ~m m~ to disable permanently)

Getting Help:
: h … : calc-help-prefix
- ~… k~: keybinding
- ~… f~: function
- ~… s~: summary

* Stack Manipulation
- ~RET / SPC : calc-enter~ (without input) → duplicate the top of the stack
- ~DEL : calc-pop~ → delete/pop top entry from stack
- ~M-DEL : calc-pop-above~ → delete/pop second-to-top entry from stack
- ~TAB : calc-roll-down~ → rotate top 2 elements /downwards/ (swaps them)
  - top element in stack will be moved to /n/-prefixed (default: 2nd) place
- ~M-TAB / C-M-i : calc-roll-up~ → rotate top 3 elements /upwards/
  - /n/-prefixed (default: 3rd) element in stack will be moved to the top

Numeric prefixes change stack element selection for some commands (like
~calc-enter~ and ~calc-pop~):
- /numeric prefix/ operates on *all top n elements* from the stack
- /negative numeric prefix/ operates on the *nth element* of the stack
- /0-numbered prefix/ operates on the *entire stack*

* Display Commands
To view results in a different notation:
- ~d N : calc-normal-language~ → normal
- ~d B : calc-big-language~ → big math formulas
- ~d C : calc-c-language~ → C language
- ~d T : calc-tex-language~ → TeX typesetting
- ~d L : calc-latex-language~ → LaTeX typesetting

Example of big math notation:
:            ________                ________
:           |  2                    |  2
:          \| a  - 4  - a      a - \| a  - 4
: [x = a + --------------, y = --------------]
:                2                   2
from normal notation:
: [x = a + (sqrt(a^2 - 4) - a) / 2, 
:  y = (a - sqrt(a^2 - 4)) / 2]

Result/stack alignment:
- ~d = : calc-center-justify~ → center results
- ~d < : calc-left-justify~ → align results to the left
- ~d > : calc-right-justify~ → align results to the right

Annotations:
- ~d } : calc-right-label~ → add righthand label
- ~d { : calc-left-label~ → add lefthand label

* Algebraic Notation
Enter a formula with ~' : calc-algebraic-entry~.

To avoid having to type ~'~ every time, enter *Algebraic mode*:
: m a : calc-algebraic-mode

Element types (may be incorrect):
- Number :: e.g. ~42~, ~3.41~
- Complex Number :: e.g. ~(0, 2)~
- Vector :: e.g. ~[1 2 3]~
- Matrix :: e.g. ~[[1 5] [2 6]]~
- Unit :: e.g. ~m/h~, have to be entered algebraically (using ~'~)
- Date :: e.g. ~<25 dec 87>~
- Operator :: e.g. ~+~, ~-~ , ~*~, ~/~, ~^~
  - ~a b~ is another way to write ~a*b~
- Group :: for explicit order of evaluation, e.g. ~(3*4)~
- Equations :: e.g. ~[x + y = a, x y = 1]~
- Stack Reference :: ~$~ for top result, ~$$~ for second result on the stack
  - consumes/pops the stack

** Operator Precedence
~^~ → ~*~ → ~/~ → ~+~ → ~-~

By default, /multiplication has precedence over division/ and is /right
associative/, so ~a/b*c~ will be interpreted as ~a/(b*c)~.
- to change this, set variable ~calc-multiplication-has-precedence~ to nil

Operator precedence is not affected by spaces, so ~a/b*c~ = ~a/b * c~ = ~a/b c~.

Evaluation of operators at the same level is /left to right/, except with ~^~,
which is /right to left/.
- e.g. ~2-3-4~ = ~(2-3)-4~, but ~2^3^4~ = ~2^(3^4)~

* Math Functions
Can also be invoked using ~x~, which is like ~M-x~ but with ~calc-~ prefixed.

Some binary operations (like ~+~) can also operate on /n/ stack elements by
using a *numeric prefix*.

*Negative numbers* can ether be entered with the prefix ~_~ (~-~ is bound to
subtraction) or by changing the sign with ~n~ afterwards.

| Command key(s) | Formula    | Meaning                                  |
|----------------+------------+------------------------------------------|
| ~+~ / ~-~ / ~*~ / ~/~  | ~x <op> y~   | add / subtract / multiply / divide       |
| ~^~              | ~x^n~        | power                                    |
| ~n~              |            | change sign (positive/negative)          |
| ~Q~              | ~sqrt(x)~    | square root                              |
|----------------+------------+------------------------------------------|
| ~P~              | ~pi~         | pi                                       |
|----------------+------------+------------------------------------------|
| ~( r i )~        | ~(r, i)~     | enter complex number                     |
|----------------+------------+------------------------------------------|
| ~[ x y … ]~      | ~[x y …]~    | collect numbers in a vector              |
| ~V R <op>~       |            | reduce vector with ~<op>~                  |
|----------------+------------+------------------------------------------|
| ~v t~            |            | transpose matrix                         |
| ~v u~            |            | unpack vector/matrix as stack elements   |
|----------------+------------+------------------------------------------|
| ~u c <unit>~     |            | convert between units (e.g. ~m/s~)         |
|----------------+------------+------------------------------------------|
| ~t N~            |            | enter current date and time              |
| (~M-<1-9>~) ~t P~  |            | extract part (prefix 1-9) of a date form |
| ~t I~            |            | increment month                          |
| ~t +~ / ~t -~      |            | add/subtract /x/ business days             |
|----------------+------------+------------------------------------------|
| ~a S <var, …>~   |            | solve equation for given variable(s)     |
| ~s l <var>~      |            | assign the top value to given variable   |
|                |            | to solve the (previous) equation         |
| ~a d <var>~      |            | take the derivative with given variable  |
|----------------+------------+------------------------------------------|
| ~f h~            |            | calculate hypothenuse                    |
| ~I T~            |            | inverse tangent (slope → angle)          |
| ~I H S~          | ~arcsinh(x)~ | inverse hyperbolic sine                  |

